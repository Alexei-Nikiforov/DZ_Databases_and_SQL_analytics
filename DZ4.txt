-- 1
/*
Подсчитать общее количество лайков, поставленных пользователями, чей возраст меньше 12 лет к текущей дате. 
Для этого объединить таблицы likes, media, и profiles, и учесть только лайки, оставленные пользователями, возраст которых составляет менее 12 лет с момента их дня рождения.
*/

SELECT COUNT(*) -- количество лайков
FROM likes l
JOIN media m ON l.media_id = m.id
JOIN profiles p ON p.user_id = m.user_id
WHERE TIMESTAMPDIFF(YEAR,p.birthday,NOW())<12;

Мое решение:
SELECT COUNT(*)
FROM 
(SELECT * FROM profiles
WHERE birthday >= '1991-11-30') AS pr, likes
WHERE pr.user_id = likes.user_id;

-- 2
/*
Подсчитать количество лайков, оставленных пользователями, в зависимости от их гендера. Для этого объединить таблицы likes и profiles, сгруппировать данные по полу пользователей и вывести результат в убывающем порядке, начиная с наибольшего количества лайков.
*/

SELECT COUNT(l.media_id) AS cnt, p.gender
FROM likes AS l
JOIN profiles AS p ON l.user_id = p.user_id
GROUP BY p.gender
ORDER BY cnt DESC;

-- 3
/*
Выбрать пользователей из таблицы users, которые не отправили ни одного сообщения (не имеют записей в таблице 'messages').
*/

SELECT
 u.id, 
 CONCAT(u.firstname, ' ', u.lastname) AS "user"
FROM users u
LEFT JOIN messages m ON u.id = m.from_user_id
WHERE m.id IS NULL;

Мое решение:
SELECT id, CONCAT(firstname, ' ', lastname) AS user
FROM users 
WHERE users.id NOT IN (SELECT messages.from_user_id FROM messages);

-- 4
/*
У вас есть база данных с тремя таблицами: users (пользователи), messages (сообщения) и friend_requests (запросы на добавление в друзья).

Каждая запись в таблице users содержит информацию о пользователе, включая уникальный идентификатор (id), имя (firstname), и фамилию (lastname).

Таблица friend_requests содержит информацию о запросах на добавление в друзья с полями: уникальный идентификатор (id), идентификатор инициатора запроса (initiator_user_id), идентификатор целевого пользователя (target_user_id) и статус запроса (status), где 'approved' указывает на утвержденные запросы.

Таблица messages содержит информацию о сообщениях с полями: уникальный идентификатор (id), идентификатор отправителя (from_user_id), идентификатор получателя (to_user_id) и текст сообщения (message_text).

Ваша задача состоит в том, чтобы написать SQL-запрос, который вернет идентификатор и имя отправителя, который отправил наибольшее количество сообщений пользователю с идентификатором 1, при условии, что запросы на добавление в друзья между отправителем и получателем сообщений имеют статус 'approved'.

Также, учтите, что некоторые пользователи могут быть отправителями сообщений, но не обязательно быть друзьями (не иметь утвержденных запросов на добавление в друзья).
*/

SELECT from_user_id, CONCAT(m.firstname, ' ', m.lastname) AS 'От кого', COUNT(*) AS cnt
FROM messages AS m
JOIN friend_requests AS f
ON m.from_user_id = f.initiator_user_id
AND m.to_user_id = f.target_user_id
JOIN users AS u
ON m.from_user_id = u.id
WHERE to_user_id = 1
AND f.status = 'approved'
GROUP BY m.from_user_id
ORDER BY cnt DESC
LIMIT 1;
